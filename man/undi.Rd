% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R, R/undi.R
\docType{package}
\name{undi}
\alias{undi}
\alias{undi}
\alias{undi-package}
\title{Run test for unjustified disparate impact}
\usage{
undi(formula, data, outcome, controls = NULL, train = 0.5, fit1 = NULL,
  pred1 = NULL, fit2 = NULL, seed = 1234, ...)
}
\arguments{
\item{formula}{a formula in the form of \code{treatment ~ grouping_variable +
other controls} where the LHS is the treatment column, first element on the
RHS is the grouping variable (e.g., Race), and the remainder of the RHS
specifies the form of controls}

\item{data}{data frame to use; must include all the columns specified in
\code{formula} and given in the \code{outcome} parameter}

\item{outcome}{name of outcome column in data}

\item{controls}{character vector of additional controls to consider in the
second-stage model}

\item{train}{either (1) a value between 0 and 1 representing the proportion
of data to use in training, (2) the name of a column of characters "train"
and "test" within \code{data} to use in splitting the data, or (3) a
logical vector of equal length as \code{nrow(data)} used to index training
data}

\item{fit1}{a function of the form f(formula, data, ...) used for fitting the
first-stage model; using \code{gbm} by default}

\item{pred1}{a function of the form f(model, data) used for generating
predictions from the first-stage model}

\item{fit2}{a function of the form f(formula, data) used for fitting the
second-stage model; using \code{glm} with \code{family = binomial} by
default}

\item{seed}{random seed to use}

\item{...}{additional arguments passed to first-stage model fitting function,
\code{fit1}}
}
\description{
Run test for unjustified disparate impact

The \code{undi} package implements a test for unjustified disparate impact in
policy decisions.
}
\details{
The first-stage model, which estimates \code{risk} is always trained
  on the subset of data where \code{treatment == 1}, i.e., \code{risk} is
  generally considered to be P(outcome = 1 | treatment = 1)
}
