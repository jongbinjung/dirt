% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{overwrite_list}
\alias{overwrite_list}
\title{Overwrites a list with named arguments}
\usage{
overwrite_list(defaults, ...)
}
\arguments{
\item{defaults}{list of default values.
Argument always be specified by name not position}

\item{...}{a comma separated set of named 

\code{overwrite_list(defaults = list(a = 1, b = '2'), c = 1, a = '3')} will
return list(a = '1', b = '2', c = 1)

To demonstrate the operation when one of the arguments is a \code{pairlist},
note that both of the functions below produce the same result. You can either pass the
elipsis (...) directly, or you can extract the arguments from the \code{call}
and pass them later.

\code{
  f = function(...) {
    overwrite_list(defaults = list(a = 1, b = 'b'), b = 2, ...)
  }
}

\code{
  f = function(...) {
    # Extract passed arguments from call
    dot_args = match.call(expand.dots = F)$...
    overwrite_list(defaults = list(a = 1, b = 'b'), b = 2, dot_args)
  }
}

\code{f(k = 5)} will return \code{list(a = 1, b = 2, k = 5)}.

\code{f(b = 10)} will return \code{list(a = 1, b = 10)}. Note
how the named argument \code{b} appears 3 times in the \code{overwrite_list}
call; once in the defaults, once explicitly specified for overwriting (\code{b = 2}),
and once indirectly specified via the arguments to \code{f} (\code{b = 10}).}
}
\description{
Returns a list that is the intersection of
\code{defaults} and \code{...} where named
values in \code{...} overwrite values in \code{defaults}.
}
\details{
One or more of the elements in \code{...} can be a
\code{pairlist} (the structure in which dotted arguments
are stored) and this list will get expanded and substituted
into \code{defaults} too. This means that the same named argument
could be listed more than twice, in which case the right-most value
is used. See below for details.
}
